openapi: 3.0.0
info:
  title: ApiGateAway API
  version: 1.0.0
  description: API маршрутизатора

servers:
  - url: http://localhost:8009
    description: Локальный сервер для разработки

tags:
  - name: Orders
  - name: Payments

paths:
  /orders/{id}/list:
    get:
      summary: Получение списка заказов
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Идентификатор пользователя
      responses:
        '200':
          description: Список заказов успешно получен
        '404':
          description: У пользователя еще нет заказов (хотя по факту лучше бы 200, это же не ошибка)
        '500':
          description: Ошибка сервиса

  /orders/{id}:
    post:
      summary: Получение конкретного заказа
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Идентификатор заказа
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  example: d2b3ee91-6570-4ad7-9e61-f3f6d2c0ae82
              required:
                - user_id
      responses:
        '200':
          description: Информация о заказе успешно получена
        '404':
          description: Такого заказа для этого пользователя не существует
        '500':
          description: Ошибка сервиса

  /order/create:
    post:
      summary: Загрузка файла
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  description: Описание заказа
                  example: Some very helpfully order description
                amount:
                  type: string
                  description: Сумма для оплаты заказа (в рублях)
                  example: 500
                user_id:
                  type: string
                  example: d2b3ee91-6570-4ad7-9e61-f3f6d2c0ae82
              required:
                - description
                - amount
                - user_id

      responses:
        '200':
          description: Заказ успешно создан
        '400':
          description: Неверный запрос
        '500':
          description: Внутренняя ошибка сервера

  /account/top_up:
    post:
      summary: Пополнение аккаунта
      tags:
        - Payments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: string
                  description: Сумма для оплаты заказа (в рублях)
                  example: 500
                user_id:
                  type: string
                  example: d2b3ee91-6570-4ad7-9e61-f3f6d2c0ae82
              required:
                - amount
                - user_id
      responses:
        '200':
          description: Сумма успешна зачислена
        '404':
          description: У пользователя еще нет аккаунта
        '500':
          description: Ошибка сервиса

  /account/{id}/balance:
    get:
      summary: Получение конкретного заказа
      tags:
        - Payments
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Идентификатор пользователя
      responses:
        '200':
          description: Баланс аккаунта успешно получен
        '404':
          description: Аккаунта у этого пользователя не наблюдается
        '500':
          description: Ошибка сервиса

  /account/create:
    post:
      summary: Создание аккаунта
      tags:
        - Payments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  example: d2b3ee91-6570-4ad7-9e61-f3f6d2c0ae82
              required:
                - user_id
      responses:
        '200':
          description: Аккаунт успешно создан
        '400':
          description: Аккаунт уже существует
        '500':
          description: Ошибка сервиса