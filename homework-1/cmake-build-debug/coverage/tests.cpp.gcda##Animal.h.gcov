        -:    0:Source:/Users/nazarzakrevskij/CLionProjects/SoftwareEngineering/homework-1/tests/../include/Zoo/../Animal/Animal.h
        -:    0:Graph:/Users/nazarzakrevskij/CLionProjects/SoftwareEngineering/homework-1/cmake-build-debug/CMakeFiles/tests.dir/tests/tests.cpp.gcno
        -:    0:Data:/Users/nazarzakrevskij/CLionProjects/SoftwareEngineering/homework-1/cmake-build-debug/CMakeFiles/tests.dir/tests/tests.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#pragma once
        -:    2:#include "../InterfaceAliveInterface.h"
        -:    3:#include "../InterfaceInventory.h"
        -:    4:#include <iostream>
        -:    5:
function _ZN6AnimalD1Ev called 0 returned 0% blocks executed 0%
function _ZN6AnimalD0Ev called 0 returned 0% blocks executed 0%
function _ZN6AnimalD2Ev called 2 returned 100% blocks executed 100%
        -:    6:class Animal : public Alive, public Inventory {
        -:    7:protected:
        -:    8:    int food_rate_;
        -:    9:    int inventory_number_;
        -:   10:    bool is_healthy_;
        -:   11:    std::string name_;
        -:   12:    std::string type_; // herbo/predator
        -:   13:
        -:   14:public:
function _ZN6AnimalC2ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEiibS6_ called 2 returned 100% blocks executed 42%
        4:   15:    Animal(std::string name, int food_rate, int inventory_number, bool is_healthy, std::string type)
        4:   16:        : name_(name), food_rate_(food_rate), inventory_number_(inventory_number),
        2:   16-block  0
branch  0 taken 2
branch  1 taken 0
        2:   16-block  1
branch  2 taken 2
branch  3 taken 0
        6:   17:        is_healthy_(is_healthy), type_(type){};
        2:   17-block  0
branch  0 taken 0
branch  1 taken 2
        2:   17-block  1
    $$$$$:   17-block  2
    $$$$$:   17-block  3
    $$$$$:   17-block  4
    $$$$$:   17-block  5
        -:   18:
function _ZN6Animal11GetFoodRateEv called 4 returned 100% blocks executed 100%
        4:   19:    int GetFoodRate() override {
        4:   20:        return food_rate_;
        4:   20-block  0
        -:   21:    }
        -:   22:
function _ZNK6Animal15InventoryNumberEv called 0 returned 0% blocks executed 0%
    #####:   23:    int InventoryNumber() const override {
    #####:   24:        return inventory_number_;
    $$$$$:   24-block  0
        -:   25:    }
        -:   26:
function _ZNK6Animal9IsHealthyEv called 2 returned 100% blocks executed 100%
        2:   27:    bool IsHealthy() const {
        2:   28:        return is_healthy_;
        2:   28-block  0
        -:   29:    }
        -:   30:
function _ZNK6Animal7GetTypeEv called 2 returned 100% blocks executed 100%
        2:   31:    std::string GetType() const {
        2:   32:        return type_;
        2:   32-block  0
        -:   33:    }
        -:   34:    virtual std::string GetName() const = 0;
        -:   35:};
        -:   36:
function _ZN5HerboD1Ev called 0 returned 0% blocks executed 0%
function _ZN5HerboD0Ev called 0 returned 0% blocks executed 0%
function _ZN5HerboD2Ev called 1 returned 100% blocks executed 100%
        -:   37:class Herbo : public Animal {
        -:   38:protected:
        -:   39:    int kindness;
        -:   40:
        -:   41:public:
function _ZN5HerboC2ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEiibi called 1 returned 100% blocks executed 42%
        1:   42:    Herbo(std::string name, int food_rate, int inventory_number, bool is_healthy, int kindness)
        1:   43:        : Animal(name, food_rate, inventory_number, is_healthy, "herbo"), kindness(kindness){};
        1:   43-block  0
branch  0 taken 1
branch  1 taken 0
        1:   43-block  1
branch  2 taken 0
branch  3 taken 1
        1:   43-block  2
    $$$$$:   43-block  3
    $$$$$:   43-block  4
    $$$$$:   43-block  5
    $$$$$:   43-block  6
        -:   44:
function _ZNK5Herbo21CanInteractWithPeopleEv called 1 returned 100% blocks executed 100%
        1:   45:    bool CanInteractWithPeople() const {
        1:   46:        return kindness > 5;
        1:   46-block  0
        -:   47:    }
        -:   48:};
        -:   49:
function _ZN8PredatorD1Ev called 0 returned 0% blocks executed 0%
function _ZN8PredatorD0Ev called 0 returned 0% blocks executed 0%
function _ZN8PredatorD2Ev called 1 returned 100% blocks executed 100%
        -:   50:class Predator : public Animal {
        -:   51:public:
function _ZN8PredatorC2ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEiib called 1 returned 100% blocks executed 42%
        1:   52:    Predator(std::string name, int food_rate, int inventory_number, bool is_healthy)
        1:   53:        : Animal(name, food_rate, inventory_number, is_healthy, "predator"){};
        1:   53-block  0
branch  0 taken 1
branch  1 taken 0
        1:   53-block  1
branch  2 taken 0
branch  3 taken 1
        1:   53-block  2
    $$$$$:   53-block  3
    $$$$$:   53-block  4
    $$$$$:   53-block  5
    $$$$$:   53-block  6
        -:   54:};
        -:   55:
function _ZN6MonkeyD1Ev called 1 returned 100% blocks executed 100%
function _ZN6MonkeyD0Ev called 0 returned 0% blocks executed 0%
function _ZN6MonkeyD2Ev called 1 returned 100% blocks executed 100%
        -:   56:class Monkey : public Herbo {
        -:   57:public:
function _ZN6MonkeyC1Eiibi called 1 returned 100% blocks executed 100%
function _ZN6MonkeyC2Eiibi called 1 returned 100% blocks executed 50%
        2:   58:    Monkey(int food_rate, int inventory_number, bool is_healthy, int kindness)
        2:   59:        : Herbo("Monkey", food_rate, inventory_number, is_healthy, kindness){};
        1:   59-block  0
        1:   59-block  1
branch  0 taken 1
branch  1 taken 0
        1:   59-block  2
    $$$$$:   59-block  3
    $$$$$:   59-block  4
        -:   60:
function _ZNK6Monkey7GetNameEv called 1 returned 100% blocks executed 100%
        1:   61:    std::string GetName() const override {
        1:   62:        return name_;
        1:   62-block  0
        -:   63:    }
        -:   64:};
        -:   65:
        -:   66:class Rabbit : public Herbo {
        -:   67:public:
        -:   68:    Rabbit(int food_rate, int inventory_number, bool is_healthy, int kindness)
        -:   69:        : Herbo("Rabbit", food_rate, inventory_number, is_healthy, kindness){};
        -:   70:
        -:   71:    std::string GetName() const override {
        -:   72:        return name_;
        -:   73:    }
        -:   74:};
        -:   75:
        -:   76:class Wolf : public Predator {
        -:   77:public:
        -:   78:    Wolf(int food_rate, int inventory_number, bool is_healthy)
        -:   79:        : Predator("Wolf", food_rate, inventory_number, is_healthy){};
        -:   80:
        -:   81:    std::string GetName() const override {
        -:   82:        return name_;
        -:   83:    }
        -:   84:};
        -:   85:
function _ZN5TigerD1Ev called 1 returned 100% blocks executed 100%
function _ZN5TigerD0Ev called 0 returned 0% blocks executed 0%
function _ZN5TigerD2Ev called 1 returned 100% blocks executed 100%
        -:   86:class Tiger : public Predator {
        -:   87:public:
function _ZN5TigerC1Eiib called 1 returned 100% blocks executed 100%
function _ZN5TigerC2Eiib called 1 returned 100% blocks executed 50%
        2:   88:    Tiger(int food_rate, int inventory_number, bool is_healthy)
        2:   89:        : Predator("Tiger", food_rate, inventory_number, is_healthy){};
        1:   89-block  0
        1:   89-block  1
branch  0 taken 1
branch  1 taken 0
        1:   89-block  2
    $$$$$:   89-block  3
    $$$$$:   89-block  4
        -:   90:
function _ZNK5Tiger7GetNameEv called 1 returned 100% blocks executed 100%
        1:   91:    std::string GetName() const override {
        1:   92:        return name_;
        1:   92-block  0
        -:   93:    }
        -:   94:};
